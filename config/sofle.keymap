/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#define LOWER 2
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  DEL  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp ESC   &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                      &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &kp MINUS
&kp TAB   &kp Q  &kp W    &kp E    &kp R     &kp T                       &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp DEL   &kp A  &kp S    &kp D    &kp F     &kp G                       &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X    &kp C    &kp V     &kp B  &kp C_MUTE &none     &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LGUI &kp LALT &kp LCTRL &mo 1  &kp RET    &kp SPACE &mo 2  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |  `  |     |      |      |      |                   |      |       |       |      |       |       |
// |       |     |  ^  |      |      |      |                   |      |   7   |   8   |   9  |   *   | BKSPC |
// |       |  <- |  v  |  ->  | PGUP |      |                   |      |   4   |   5   |   6  |   -   |       |
// |       |     |     |      | PGDN |      |        |  |       |      |   1   |   2   |   3  |   +   |       |
//               |     |      |      |      |        |  |       |      |   =   |   0   |      |
            bindings = <
&trans  &kp F1   &none     &none      &none     &none                 &none   &none     &none    &none   &none     &none
&trans  &none    &kp UP    &none      &none     &none                 &none   &kp N7    &kp N8   &kp N9  &kp STAR  &kp BSPC
&trans  &kp LEFT &kp DOWN  &kp RIGHT  &kp PG_UP &none                 &none   &kp N4    &kp N5   &kp N6  &kp MINUS &none
&trans  &none    &none     &none      &kp PG_DN &none  &trans  &trans &none   &kp N1    &kp N2   &kp N3  &kp PLUS  &trans
                 &trans    &trans     &trans    &trans &trans  &trans &mo 3  &kp EQUAL &kp N0   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |      |      |       |       |      |                |      |      |       |      |       | GMING |
// |     |  [   |  ]   |       |       |      |                |      |      |   ^   |      |       | BKSPC |
// |     |  {   |  }   |       |       |      |                |      |   <- |   v   |  ->  |  DEL  |       |
// |     |  (   |  )   |       |       |      |      |  |      |      |      |       |      |   \   |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <  
&trans   &none      &none      &none     &none     &none                    &none     &none     &none    &none     &none   &to 4
&trans   &kp LBKT   &kp RBKT   &none     &none     &none                    &none     &none     &kp UP   &none     &none   &kp BSPC
&trans   &kp LBRC   &kp RBRC   &none     &none     &none                    &none     &kp LEFT  &kp DOWN &kp RIGHT &kp DEL &none
&trans   &kp LPAR   &kp RPAR   &none     &none     &none   &trans   &trans  &none     &none     &none    &none    &kp BSLH   &trans
                    &trans     &trans    &trans    &mo 3  &trans   &trans  &trans    &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

                system_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5  |                   |      |  F10 |  F11  |  F12  |       |      |
// |     |      |      |       | PSCR  | INS   |                   |      |  F7  |  F8   |  F9   |       |      |
// |CAPS |      |      |       | UNDO  | CUT   |                   |      |  F4  |  F5   |  F6   |       |      |
// |     |      |      |       | COPY  | PASTE |        |  |       |      |  F1  |  F2   |  F3   |       |      |
//              |      |       |       |       |        |  |       |      |      |       |       |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4       &none   &kp F10   &kp F11  &kp F12  &none   &none  
&trans     &none     &none     &none     &kp PSCRN    &kp INS                     &none   &kp F7    &kp F8   &kp F9   &none   &trans   
&kp CAPS   &none     &none     &none     &kp K_UNDO   &kp K_CUT                   &none   &kp F4    &kp F5   &kp F6   &none   &none  
&trans     &none     &none     &none     &kp K_COPY   &kp K_PASTE &trans   &trans &none   &kp F1    &kp F2   &kp F3   &none   &trans
                     &trans    &trans    &trans       &trans      &trans   &trans &trans  &trans    &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        gaming_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  ALT  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | CTRL  | ENTER | LOWER|  SPACE |  | ENTER | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp ESC   &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                      &kp N6 &kp N7    &kp N8    &kp N9   &kp N0   &kp MINUS
&kp TAB   &kp Q  &kp W    &kp E    &kp R     &kp T                       &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSPC
&kp LALT   &kp A  &kp S    &kp D    &kp F     &kp G                       &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X    &kp C    &kp V     &kp B  &kp C_MUTE &none     &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
                 &kp LGUI &kp LCTRL &kp RET &mo 1  &kp SPACE   &kp RET &mo 2  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };
    };
};